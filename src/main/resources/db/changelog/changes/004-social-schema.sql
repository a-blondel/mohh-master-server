CREATE SCHEMA IF NOT EXISTS social;

CREATE TABLE IF NOT EXISTS social.BUDDY (
    ID bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    FROM_PERSONA_ID bigint NOT NULL,
    TO_PERSONA_ID bigint NOT NULL,
    LIST varchar(1) NOT NULL,
    STATUS varchar(1) NOT NULL,
    CONSTRAINT FK_BUDDY_FROM_PERSONA_ID FOREIGN KEY (FROM_PERSONA_ID) REFERENCES public.PERSONA(ID),
    CONSTRAINT FK_BUDDY_TO_PERSONA_ID FOREIGN KEY (TO_PERSONA_ID) REFERENCES public.PERSONA(ID)
);

CREATE TABLE IF NOT EXISTS social.MESSAGE (
    ID bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    FROM_PERSONA_ID bigint NOT NULL,
    TO_PERSONA_ID bigint NOT NULL,
    BODY varchar(255) NOT NULL,
    ACK boolean NOT NULL DEFAULT false,
    CREATED_ON timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_MESSAGE_FROM_PERSONA_ID FOREIGN KEY (FROM_PERSONA_ID) REFERENCES public.PERSONA(ID),
    CONSTRAINT FK_MESSAGE_TO_PERSONA_ID FOREIGN KEY (TO_PERSONA_ID) REFERENCES public.PERSONA(ID)
);

CREATE TABLE IF NOT EXISTS social.FEEDBACK_TYPE (
    ID bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    LABEL varchar(32) NOT NULL,
    NUMBER numeric NOT NULL
);

CREATE TABLE IF NOT EXISTS social.FEEDBACK (
    ID bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    FROM_PERSONA_ID bigint NOT NULL,
    TO_PERSONA_ID bigint NOT NULL,
    VERS varchar(32) NOT NULL,
    TYPE_ID bigint NOT NULL,
    CREATED_ON timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_FEEDBACK_FROM_PERSONA_ID FOREIGN KEY (FROM_PERSONA_ID) REFERENCES public.PERSONA(ID),
    CONSTRAINT FK_FEEDBACK_TO_PERSONA_ID FOREIGN KEY (TO_PERSONA_ID) REFERENCES public.PERSONA(ID),
    CONSTRAINT FK_FEEDBACK_TYPE_ID FOREIGN KEY (TYPE_ID) REFERENCES social.FEEDBACK_TYPE(ID)
);

INSERT INTO social.FEEDBACK_TYPE (LABEL, NUMBER) VALUES 
    ('Good attitude', 256),
    ('Great session', 512),
    ('Bad name', 768),
    ('Cheating', 1024),
    ('Threats or harassment', 1536),
    ('Cursing or lewdness', 1792);
